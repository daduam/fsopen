{"version":3,"sources":["Components/Filter.js","Components/PersonForm.js","Components/Persons.js","Services/personService.js","Components/Notification.js","App.js","index.js"],"names":["Filter","value","onChange","PersonForm","props","name","onNameChange","number","onNumberChange","type","onClick","Persons","persons","deletePersonOf","map","person","key","id","baseUrl","axios","get","then","response","data","newPerson","post","delete","status","put","Notification","message","className","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","filterString","setFilterString","showAll","setShowAll","notificationMessage","setNotificationMessage","notificationType","setNotificationType","personService","initialPersons","personsToShow","filter","toLowerCase","includes","event","target","length","preventDefault","find","p","undefined","show","returnedPerson","concat","setTimeout","catch","error","window","confirm","statusCode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.90cc310f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst Filter = ({value, onChange}) => (\r\n    <div>\r\n        filter shown with <input value={value} onChange={onChange} />\r\n    </div>\r\n)\r\n\r\nexport default Filter\r\n","import React from 'react'\r\n\r\n\r\nconst PersonForm = (props) => (\r\n  <form>\r\n    <div>\r\n      name: <input value={props.name} onChange={props.onNameChange} />\r\n    </div>\r\n    <div>\r\n      number: <input value={props.number} onChange={props.onNumberChange} />\r\n    </div>\r\n    <div>\r\n      <button type=\"submit\" onClick={props.onClick}>\r\n        add\r\n      </button>\r\n    </div>\r\n  </form>\r\n)\r\n\r\nexport default PersonForm\r\n","import React from 'react'\r\n\r\n\r\nconst Persons = ({ persons, deletePersonOf }) => (\r\n  <ul>\r\n    {persons.map(person => {\r\n      return (\r\n        <li key={person.name}>\r\n          {person.name} {person.number}\r\n          &nbsp;\r\n          <button onClick={() => deletePersonOf(person.id)}>delete</button>\r\n        </li>\r\n      )\r\n    })}\r\n  </ul>\r\n)\r\n\r\nexport default Persons\r\n","import axios from 'axios'\r\n\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = (newPerson) => {\r\n  const request = axios.post(baseUrl, newPerson)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.status)\r\n}\r\n\r\nconst update = (id, newPerson) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newPerson)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, deletePerson, update }\r\n","import React from 'react';\r\n\r\nconst Notification = ({ message, type }) => {\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={type}>\r\n      {message}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Notification;\r\n","import React, { useState } from 'react'\r\nimport Filter from './Components/Filter'\r\nimport PersonForm from './Components/PersonForm'\r\nimport Persons from './Components/Persons'\r\nimport personService from './Services/personService'\r\nimport Notification from './Components/Notification'\r\n\r\nimport './index.css'\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([])\r\n  const [newName, setNewName] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n  const [filterString, setFilterString] = useState('')\r\n  const [showAll, setShowAll] = useState(true)\r\n  const [notificationMessage, setNotificationMessage] = useState(null)\r\n  const [notificationType, setNotificationType] = useState(null)\r\n\r\n  const hook = () => {\r\n    personService\r\n      .getAll()\r\n      .then(initialPersons => {\r\n        setPersons(initialPersons)\r\n      })\r\n  }\r\n\r\n  useState(hook, [])\r\n\r\n  const handleNameInputChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberInputChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  // event listener for submit button\r\n  const addPerson = (event) => {\r\n    event.preventDefault();\r\n\r\n    const person = persons.find(p => p.name === newName)\r\n\r\n    if (person === undefined) {\r\n      const personObject = {\r\n        name: newName,\r\n        number: newNumber,\r\n        show: true\r\n      }\r\n\r\n      personService\r\n        .create(personObject)\r\n        .then(returnedPerson => {\r\n          setPersons(persons.concat(returnedPerson))\r\n          setNewName('')\r\n          setNewNumber('')\r\n          setNotificationMessage(`Added ${newName}`)\r\n          setNotificationType('success')\r\n          setTimeout(() => {\r\n            setNotificationMessage(null)\r\n            setNotificationType(null)\r\n          }, 5000)\r\n        })\r\n        .catch(error => {\r\n          // console.log(error.response.data)\r\n          setNotificationMessage(error.response.data.error)\r\n          setNotificationType('error')\r\n          setTimeout(() => {\r\n            setNotificationMessage(null)\r\n            setNotificationType(null)\r\n          }, 5000)\r\n        })\r\n    }\r\n    else if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one`)) {\r\n      const id = person.id\r\n\r\n      personService\r\n        .update(id, { ...person, number: newNumber })\r\n        .then(returnedPerson => {\r\n          setPersons(persons.filter(p => p.id !== id).concat(returnedPerson))\r\n          setNewName('')\r\n          setNewNumber('')\r\n          setNotificationMessage(`Changed number for ${newName}`)\r\n          setNotificationType('success')\r\n          setTimeout(() => {\r\n            setNotificationMessage(null)\r\n            setNotificationType(null)\r\n          }, 5000)\r\n        })\r\n        .catch(error => {\r\n          setNotificationMessage(`Information of ${newName} has already been removed from server`)\r\n          setNotificationType('error')\r\n          setTimeout(() => {\r\n            setNotificationMessage(null)\r\n            setNotificationType(null)\r\n          }, 5000)\r\n          setPersons(persons.filter(p => p.id !== id))\r\n        })\r\n    }\r\n    else {\r\n      // window(`${newName} is already added to the phonebook`)\r\n      setNewName('')\r\n    }\r\n  }\r\n\r\n  const handleFilterInputChange = (event) => {\r\n    setFilterString(event.target.value)\r\n    setShowAll(filterString.length === 0 ? true : false)\r\n  }\r\n\r\n  const deletePersonOf = (id) => {\r\n    const [person] = persons.filter(p => p.id === id)\r\n    if (window.confirm(`Delete ${person.name} ?`)) {\r\n      personService\r\n        .deletePerson(id)\r\n        .then(statusCode => {\r\n          if (statusCode === 200) {\r\n            setPersons(persons.filter(p => p !== person))\r\n          }\r\n        })\r\n    }\r\n  }\r\n\r\n  const personsToShow = showAll\r\n    ? persons\r\n    : persons.filter(\r\n      person => person.name.toLowerCase().includes(filterString)\r\n    )\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={notificationMessage} type={notificationType} />\r\n      <Filter value={filterString} onChange={handleFilterInputChange} />\r\n\r\n      <h2>Add a new</h2>\r\n      <PersonForm\r\n        name={newName}\r\n        number={newNumber}\r\n        onNameChange={handleNameInputChange}\r\n        onNumberChange={handleNumberInputChange}\r\n        onClick={addPerson}\r\n      />\r\n\r\n      <h2>Numbers</h2>\r\n      <Persons persons={personsToShow} deletePersonOf={deletePersonOf} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}